{
  "swagger": "2.0",
  "info": {
    "version": "1.3.0",
    "title": "Scrum Metrics"
  },
  "host": "192.168.0.116:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/postuser": {
      "post": {
        "description": "Create a new user entry in the database.",
        "summary": "Post a user in the database",
        "operationId": "setUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/postuserbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "E-mail or username already in use / Invalid format"
          },
          "201": {
            "description": "User created succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "description": "Grant user and password to confirm with the database of it's existance, proceeds to log in.",
        "summary": "Checks user/password to log in",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/loginbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User not found / Incorrect password"
          },
          "201": {
            "description": "User and password are correct, session token created"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/usersquery": {
      "get": {
        "description": "Get user id and username from every user in the database",
        "summary": "Get user info from database",
        "operationId": "getUsersM, getUsersA",
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/user": {
      "post": {
        "description": "Returns name, email and user id from the database with the given username",
        "summary": "Queries info from the given user",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/userbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "201": {
            "description": "User not found"
          },
          "400": {
            "description": "Missing Data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/nameupd": {
      "put": {
        "description": "Updates the given username's name with the new given name",
        "summary": "Updates user's name",
        "operationId": "updateName",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/nameupdbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User succesfully updated"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/mailupd": {
      "put": {
        "description": "Updates the given username's email with the new given email",
        "summary": "Updates user's email",
        "operationId": "updateMail",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/emailupdbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invalid mail format"
          },
          "201": {
            "description": "User updated succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/passupd": {
      "put": {
        "description": "Updates the given username's password with the new given one",
        "summary": "Updates user's password",
        "operationId": "updatePass",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/passupdbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/allupd": {
      "put": {
        "description": "Updates the given username's name and email with the new given name and email",
        "summary": "Updates user's name and email",
        "operationId": "updateAll",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/allupdbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated succesfully"
          },
          "201": {
            "description": "Invalid mail format"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/postproject": {
      "post": {
        "description": "Creates a new project on the database with the given information",
        "summary": "Creates a project in the database",
        "operationId": "setProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/postprojectbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Name already in use"
          },
          "201": {
            "description": "Project created succesfully"
          },
          "400": {
            "description": "Missing Data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/lastproject": {
      "post": {
        "description": "Query for returning the project id that had just been created",
        "summary": "Returns last created project id",
        "operationId": "getProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/lastprojectbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project not found"
          },
          "201": {
            "description": "Project found and returned"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/userprojs": {
      "post": {
        "description": "Queries the project ids from the database with the given user id",
        "summary": "Returns the projects a user is in",
        "operationId": "getUserProjects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/userprojectsbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/projectinfo": {
      "post": {
        "description": "Queries the given project's info as name and description",
        "operationId": "getProjectInfo",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/projectinfobody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/postmember": {
      "post": {
        "description": "Inserts into the database every new member",
        "operationId": "setMember",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/memberbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member added succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/projmembers": {
      "post": {
        "description": "Retrieves the members in a project",
        "operationId": "getMemebers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/projmembody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/username": {
      "post": {
        "description": "Returns a user's name",
        "operationId": "getUserName",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/usernamebody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/setnewdesc": {
      "put": {
        "description": "Updates a project's description",
        "operationId": "setNewDesc",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/setnewdescbody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Description updated"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/deletemember": {
      "post": {
        "description": "Delete a member from a project",
        "operationId": "deleteMember",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/deletemember"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member deleted succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/updmemrole": {
      "put": {
        "description": "Update a member's role in a project",
        "operationId": "updRole",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/updmemrole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role updated succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/setsprint": {
      "post": {
        "description": "Creates a sprint for the current project",
        "operationId": "newSprint",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/setsprint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Name already in use"
          },
          "201": {
            "description": "Sprint created succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/getsprints": {
      "post": {
        "description": "Gets all the sprints in a project",
        "operationId": "getSprints",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/getsprints"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/currsprint": {
      "post": {
        "description": "Gets the current sprint",
        "operationId": "getCurSprint",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/currsprint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/getstories": {
      "post": {
        "description": "Retrieves a project's stories",
        "operationId": "getStories",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/getstories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/poststory": {
      "post": {
        "description": "Creates a new story in the sprint",
        "operationId": "setStory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/setstory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story created"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/updstorycol": {
      "put": {
        "description": "Updates the column a story is in",
        "operationId": "updStoryCol",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/updstorycol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story column updated"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/sprintstatus": {
      "post": {
        "description": "Retrieves the current sprint's status",
        "operationId": "checkSprint",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/sprintstatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/endsprint": {
      "put": {
        "description": "Set the sprint's status to done",
        "operationId": "endSprint",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/endsprint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint finished succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/unfinishedstories": {
      "post": {
        "description": "Retrieves all the stories that are not in the Done column",
        "operationId": "getUnfinishedStories",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/unfinishedstories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/movestory": {
      "put": {
        "description": "Moves a story to another sprint",
        "operationId": "moveStory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/movestory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/editstory": {
      "put": {
        "description": "Edits a story",
        "operationId": "editStory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/editstory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story updated succesfully"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/getnextsprint": {
      "post": {
        "description": "Gets a story's sprint",
        "operationId": "getNextSprint",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users/properties/nextsprint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull query"
          },
          "400": {
            "description": "Missing data"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "definitions": {
    "Users": {
      "properties": {
        "loginbody": {
          "description": "User and password to log in",
          "type": "string",
          "required": true,
          "example": "{\"username\":\"test\",\"password\":\"test\"}"
        },
        "postuserbody": {
          "description": "Create a new user entry in the database",
          "type": "string",
          "required": true,
          "example": "{\"name\":\"test profile\",\"email\":\"test@test.com\",\"username\":\"test\",\"password\":\"test\"}"
        },
        "userbody": {
          "type": "string",
          "required": true,
          "example": "{\"username\":\"test\"}"
        },
        "nameupdbody": {
          "type": "string",
          "required": true,
          "example": "{\"name\":\"new name\",\"username\":\"test\"}"
        },
        "passupdbody": {
          "type": "string",
          "required": true,
          "example": "{\"newpass\":\"new password\",\"username\":\"test\"}"
        },
        "emailupdbody": {
          "type": "string",
          "required": true,
          "example": "{\"email\":\"newemail@test.com\",\"username\":\"test\"}"
        },
        "allupdbody": {
          "type": "string",
          "required": true,
          "example": "{\"name\":\"new name\",\"email\":\"newemail@test.com\",\"username\":\"test\"}"
        },
        "postprojectbody": {
          "type": "string",
          "required": true,
          "example": "{\"name\":\"testproject\",\"description\":\"project description\",\"start_date\":\"2019-09-29\",\"end_date\":null,\"image\":null}"
        },
        "lastprojectbody": {
          "type": "string",
          "required": true,
          "example": "{\"name\":\"projectname\"}"
        },
        "userprojectsbody": {
          "type": "number",
          "required": true,
          "example": "{\"userid\":1}"
        },
        "projectinfobody": {
          "type": "number",
          "required": true,
          "example": "{\"projectid\":1}"
        },
        "memberbody": {
          "type": "string",
          "required": true,
          "example": "{\"projid\":1,\"user\":1,\"role\":\"ScrumMaster\"}"
        },
        "projmembody": {
          "type": "string",
          "required": true,
          "example": "{\"projid\":1}"
        },
        "usernamebody": {
          "type": "string",
          "required": true,
          "example": "{\"userid\":1}"
        },
        "setnewdescbody": {
          "type": "string",
          "required": true,
          "example": "{\"description\":1,\"projid\":1}"
        },
        "deletemember": {
          "type": "string",
          "required": true,
          "example": "{\"userid\":1,\"projid\":1}"
        },
        "updmemrole": {
          "type": "string",
          "required": true,
          "example": "{\"role\":\"Team Member\",\"projid\":1,\"userid\":1}"
        },
        "setsprint": {
          "type": "string",
          "required": true,
          "example": "{\"name\":\"Sprint 1\",\"projid\":1}"
        },
        "getsprints": {
          "type": "string",
          "required": true,
          "example": "{\"projid\":1}"
        },
        "currsprint": {
          "type": "string",
          "required": true,
          "example": "{\"projid\":1,\"name\":\"Name\"}"
        },
        "getstories": {
          "type": "string",
          "required": true,
          "example": "{\"projid\":1,\"sprintid\":1}"
        },
        "setstory": {
          "type": "string",
          "required": true,
          "example": "{\"description\":\"This is a story\",\"sprintid\":1,\"projid\":1}"
        },
        "updstorycol": {
          "type": "string",
          "required": true,
          "example": "{\"colid\":1,\"storyname\":\"Story name\",\"sprintid\":1,\"projid\":1}"
        },
        "sprintstatus": {
          "type": "string",
          "required": true,
          "example": "{\"sprintid\":1,\"projid\":1}"
        },
        "endsprint": {
          "type": "string",
          "required": true,
          "example": "{\"sprintid\":1,\"projid\":1}"
        },
        "unfinishedstories": {
          "type": "string",
          "required": true,
          "example": "{\"sprintid\":1,\"projid\":1}"
        },
        "movestory": {
          "type": "string",
          "required": true,
          "example": "{\"sprintid\":1,\"projid\":1,\"storyid\":1}"
        },
        "editstory": {
          "type": "string",
          "required": true,
          "example": "{\"newstory\":\"This is one new story\",\"sprintid\":1,\"projid\":1,\"oldstory\":\"This is the old story\"}"
        },
        "nextsprint": {
          "type": "string",
          "required": true,
          "example": "{\"projid\":1}"
        }
      }
    }
  }
}